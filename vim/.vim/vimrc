syntax on                   " enable syntax highlighting
filetype plugin indent on   " allow file type specific options
set number                  " turn on line numbers
set laststatus=2            " always show status line (even with only single window)
set wildmenu                " visual autocomplete for commands
set noshowmatch             " stop brief jump on highlight match
set tabstop=4               " tab width is 4 spaces
set shiftwidth=4            " indent also with 4 spaces
set bs=indent,eol,start     " make my backspace work again!
set splitbelow              " horizontal splits
set splitright              " vertical splits
"set spell                   " turn spellcheck on
set nowrap                  " hate line wrapping
"set formatoptions-=cro      " stop continuing comments
"set iskeyword-=_            " ease of mobility using lower_case_snake_case
set clipboard=unnamedplus   " use with +clipboard feature
set shortmess-=S            " show search count message
set incsearch               " move cursor to matched string, while typing the search pattern
set autochdir               " change directory to file
set expandtab               " always use spaces

" use jk to enter normal mode from insert mode 
inoremap jk <ESC>l

" use shift+enter to prevent comments from continuing on next line
inoremap <S-CR> <CR><ESC>^Da

" move windows ctrl+hjkl
nnoremap <C-h> <C-w>h
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-l> <C-w>l

" swap windows ctrl+HJKL
nnoremap [72;5u <C-w>H
nnoremap [74;5u <C-w>J
nnoremap [75;5u <C-w>K
nnoremap [76;5u <C-w>L

" resize windows ctrl+arrows
nnoremap <C-Up> <C-w>5+
nnoremap <C-Down> <C-w>5-
nnoremap <C-Left> <C-w>5<
nnoremap <C-Right> <C-w>5>

" splits ctrl+\-
nnoremap [45;4u <C-w>s
nnoremap <C-\> <C-w>v

" set windows to equal sizes ctrl+=
nnoremap [61;4u <C-w>=

let g:zoom_winrestcmd = ''
function! ToggleZoom()
    if g:zoom_winrestcmd == ''
    let g:zoom_winrestcmd = winrestcmd()
    resize
    vertical resize
  else
    execute g:zoom_winrestcmd
    let g:zoom_winrestcmd = ''
  endif
endfunction

" zoom window ctrl+mf
nnoremap <C-m> :call ToggleZoom()<CR>

" remove newbie crutches
for key in ['<Down>', '<Left>', '<Right>', '<Up>']
    exec 'noremap' key '<Nop>'
    exec 'noremap!' key '<Nop>'
endfor

" command to export to pdf
command Pdf hardcopy > %.ps | !ps2pdf %.ps && rm %.ps

" Turn on spell check for certain filetypes
augroup spellcheck
	autocmd!
	autocmd FileType text,markdown,gitcommit setlocal spell
	autocmd BufRead,BufNewFile TODO,Todo,todo setlocal spell
augroup END

function VerticalRuler()
	" vertical ruler for 120 characters per line
	augroup BgHighlight
		autocmd!
		autocmd WinEnter,BufWinEnter *
					\ if get(getwininfo(win_getid())[0], 'terminal') != '1'
					\ | setlocal colorcolumn=120
					\ | endif	                                                    " don't show for terminal
		autocmd WinLeave,TerminalOpen * setlocal colorcolumn=0                      " only one color column shown at a time
	augroup END
	" set color of vertical ruler
	highlight ColorColumn ctermbg=black
endfunction
"call VerticalRuler()

colorscheme tender
" make transparent
highlight Normal ctermbg=None
" override color of line numbers
highlight LineNr ctermfg=242
" override color of comments
highlight Comment ctermfg=244

if v:version >= 800 && empty($NOVIMSTATUSLINE)
	source ~/.vim/statusline.vim
endif
